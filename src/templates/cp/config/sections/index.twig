{% extends 'critter/_layouts/cp' %}

{% import '_includes/forms' as forms %}
{% from 'critter/macros' import configWarning %}

{% set fullPageForm = true %}

{% set selectedSubnavItem = 'sections' %}

{% block sidebar %}{% endblock %}

{% block actionButton %}
    {% if currentUser.can(craft.critter.const('PERMISSION_MANAGE_SECTIONS_EDIT')) %}
        <input type="submit" class="btn submit" value="{{ 'Save'|t('app') }}">
    {% endif %}
{% endblock %}

{% block content %}

    <input type="hidden" name="action" value="{{ pluginHandle }}/config/save">
    <input type="hidden" name="pluginHandle" value="{{ pluginHandle }}">

    {% if not currentUser.can(craft.critter.const('PERMISSION_MANAGE_SECTIONS_EDIT')) %}
        <div class="readable">
            <blockquote class="note">
                <p><strong>{{ 'Read-only mode'|t(pluginHandle) }}</strong></p>
                <p>{{ 'You have permission to view section configurations but not to edit them. Contact your administrator if you need to make changes.'|t(pluginHandle) }}</p>
            </blockquote>
        </div>
    {% endif %}

    <h2>{{ "Sections"|t('app') }}</h2>

    <p>Sections that are in <em>section</em> mode will generate one critical CSS file for all entries within that section. Here you can choose the entry that will be used to generate the critical CSS for each section.</p>
    <p>Singles and sections in <em>Entry</em> mode will generate a critical CSS file for each entry individually.</p>

    {% if config.sectionSettings is defined %}
        <p class="warning has-icon">
            <span class="icon" aria-hidden="true"></span>
            <span class="visually-hidden">Warning: </span><span>{{ configWarning('sectionSettings') }}</span>
        </p>
    {% endif %}

    <hr>

    {% for section in sections %}

        {% set sectionConfig = sectionsConfig[section.id][cpSite.id] ?? null %}

        {% set isSingle = section.type == 'single' %}
        {% if not isSingle %}

            {% set mode = settings.sectionSettings[section.handle].mode ?? settings.defaultMode %}

            <div class="field">
                <div class="heading">
                    <h2>{{ section.name }}</h2>
                </div>

                {% set elements = sectionConfig and sectionConfig.entryId ? [sectionConfig.getEntry()] : null %}
                {% set canEdit = currentUser.can(craft.critter.const('PERMISSION_MANAGE_SECTIONS_EDIT')) %}

                {{ forms.elementSelect({
                    id: 'section-entry-' ~ section.handle,
                    name: 'config[sections][' ~ section.id ~ '][' ~ cpSite.id ~ '][entryId]',
                    elementType: 'craft\elements\Entry',
                    limit: 1,
                    showSiteMenu: false,
                    elements: elements,
                    disabled: not canEdit,
                }) }}

                {% if mode != 'section' %}
                    <p class="warning has-icon">
                        <span class="icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Tip: </span>
                        <span>This won't have an effect because the <em>{{ section.name }}</em> section is in <em>{{ mode }}</em> mode.</span>
                    </p>
                {% endif %}

            </div>
        {% endif %}
    {% endfor %}

{% endblock %}
