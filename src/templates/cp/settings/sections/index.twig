{% extends 'critter/_layouts/cp' %}

{% import '_includes/forms' as forms %}
{% from 'critter/macros' import configWarning %}

{% set fullPageForm = true %}
{% set selectedTab = 'sections' %}

{% block actionButton %}
    <input type="submit" class="btn submit" value="{{ 'Save'|t('app') }}">
{% endblock %}

{% block content %}

    <input type="hidden" name="action" value="{{ pluginHandle }}/settings/save">
    <input type="hidden" name="pluginHandle" value="{{ pluginHandle }}">

    <h2>{{ 'Sections'|t('app' )}}</h2>

    <p>Here you can configure the critical CSS settings for each section.</p>
    <p>Each section can be set to use either a unique CSS for each URL or a shared CSS for all URLs in that section.</p>
    <ul>
        <li><strong>URL:</strong> Unique CSS will be used for each URL in this section.</li>
        <li><strong>Section:</strong> The same CSS will be used for all URLs in this section.</li>
    </ul>

    {% if config.sectionSettings is defined %}
        <p class="warning has-icon">
            <span class="icon" aria-hidden="true"></span>
            <span class="visually-hidden">Warning: </span><span>{{ configWarning('sectionSettings') }}</span>
        </p>
    {% endif %}

    <hr>

    {% for section in sections %}
        <div class="field">
            {# <div class="heading">
                <h2>{{ section.name }}</h2>
            </div> #}

            {% set settingsMode = settings.sectionSettings[section.handle].mode ?? null %}
            {% set configMode = config.sectionSettings[section.handle].mode ?? null %}

            {% set isSingle = section.type == 'single' %}
            {% set value = isSingle ? 'url' : settingsMode %}

            {{ forms.selectField({
                label: "'" ~ section.name ~ "' Mode"|t(pluginHandle),
                instructions: "Select the mode that entries in the <strong>#{section.name}</strong> section should use. \n "|t(pluginHandle),
                name: "settings[sectionSettings][#{section.handle}][mode]",
                options: modeOptions,
                value: value ?? settings.defaultMode,
                toggle: true,
                disabled: isSingle,
                tip: isSingle ? 'Singles always use URL mode.'|t(pluginHandle),
            }) }}

        </div>
    {% endfor %}

{% endblock %}
