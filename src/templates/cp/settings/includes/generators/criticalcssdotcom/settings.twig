{% import '_includes/forms' as forms %}
{% from 'critter/macros' import configWarning, configGroupWarning %}

{# whether or not allowAdminChanges is on #}
{% set readOnly = readOnly ?? false %}

{{ forms.autosuggestField({
    label: "API Key"|t(craft.critter.pluginHandle),
    instructions: "The API key for your criticalcss.com account."|t(craft.critter.pluginHandle),
    suggestEnvVars: true,
    suggestAliases: true,
    name: 'apiKey',
    value: settings.generatorSettings.apiKey ?? null,
    required: true,
    disabled: readOnly,
    code: true
}) }}

{{ forms.textField({
    label: "Max Attempts"|t(craft.critter.pluginHandle),
    instructions: "The maximum number of times to poll the API for results before giving up."|t(craft.critter.pluginHandle),
    name: 'maxAttempts',
    value: settings.generatorSettings.maxAttempts ?? 10,
    type: 'number',
    min: 1,
    max: 50,
    disabled: readOnly,
}) }}

{{ forms.textField({
    label: "Attempt Delay"|t(craft.critter.pluginHandle),
    instructions: "The number of seconds to wait between each polling attempt."|t(craft.critter.pluginHandle),
    name: 'attemptDelay',
    value: settings.generatorSettings.attemptDelay ?? 2,
    type: 'number',
    min: 1,
    max: 30,
    disabled: readOnly,
}) }}

{{ forms.textField({
    label: "Viewport Width"|t(craft.critter.pluginHandle),
    instructions: "The viewport width in pixels for critical CSS generation."|t(craft.critter.pluginHandle),
    name: 'width',
    value: settings.generatorSettings.width ?? generator.width,
    type: 'number',
    min: 320,
    max: 3840,
    disabled: readOnly,
}) }}

{{ forms.textField({
    label: "Viewport Height"|t(craft.critter.pluginHandle),
    instructions: "The viewport height in pixels for critical CSS generation."|t(craft.critter.pluginHandle),
    name: 'height',
    value: settings.generatorSettings.height ?? generator.height,
    type: 'number',
    min: 240,
    max: 2160,
    disabled: readOnly,
}) }}

{{ config.generatorSettings is defined ? configGroupWarning('generatorSettings') }}
