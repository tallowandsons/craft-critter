{% import '_includes/forms' as forms %}

<h1>Critter Tools</h1>

<p>Use these utilities to manage Critical CSS generation and expiration.</p>

<hr>

{# <h2>Expiration</h2> #}

<h2>Expire all critical CSS</h2>

<p>Mark all critical CSS records as expired.<br>Expired CSS will still be rendered on the page until new CSS is generated.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/expire-all') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    <input type="submit" class="btn submit" value="{{ "Expire all"|t('critter') }}">
</form>

<hr>

<h2>Expire CSS for specific entry</h2>

<p>Mark critical CSS records for a specific entry as expired.<br>Select an entry to expire all associated CSS records.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/expire-entry') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    {{ forms.elementSelectField({
        label: "Entry"|t('critter'),
        id: 'entryIds',
        name: 'entryIds',
        elementType: 'craft\\elements\\Entry',
        selectionLabel: "Choose an entry"|t('critter'),
        limit: 1,
        required: true,
        sources: '*'
    }) }}

    <input type="submit" class="btn submit" value="{{ "Expire entry CSS"|t('critter') }}">
</form>

<hr>

<h2>Expire CSS for specific section</h2>

<p>Mark critical CSS records for a specific section as expired.<br>Select a section to expire all associated CSS records.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/expire-section') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    {{ forms.selectField({
        label: "Section"|t('critter'),
        id: 'sectionHandle',
        name: 'sectionHandle',
        options: craft.app.entries.allSections|filter(section => section.type != 'single')|map(section => {
            value: section.handle,
            label: section.name
        }),
        required: true
    }) }}

    <input type="submit" class="btn submit" value="{{ "Expire section CSS"|t('critter') }}">
</form>

<hr>

<h2>Regenerate expired critical CSS</h2>

<p>Queue regeneration of all expired critical CSS records.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/regenerate-expired') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    <input type="submit" class="btn submit" value="{{ "Regenerate expired"|t('critter') }}">
</form>

<hr>

<h2>Regenerate all critical CSS</h2>

<p>Regenerate all critical CSS records, regardless of their expiration status. This will queue regeneration of every CSS record.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/regenerate-all') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    <input type="submit" class="btn submit" value="{{ "Regenerate all"|t('critter') }}">
</form>

<hr>

<h2>Regenerate CSS for specific entry</h2>

<p>Regenerate critical CSS records for a specific entry, regardless of expiration status.<br>Select an entry to regenerate all associated CSS records.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/regenerate-entry') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    {{ forms.elementSelectField({
        label: "Entry"|t('critter'),
        id: 'regenerateEntryIds',
        name: 'entryIds',
        elementType: 'craft\\elements\\Entry',
        selectionLabel: "Choose an entry"|t('critter'),
        limit: 1,
        required: true,
        sources: '*'
    }) }}

    <input type="submit" class="btn submit" value="{{ "Regenerate entry CSS"|t('critter') }}">
</form>

<hr>

<h2>Regenerate CSS for specific section</h2>

<p>Regenerate critical CSS records for a specific section, regardless of expiration status.<br>Select a section to regenerate all associated CSS records.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/regenerate-section') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    {{ forms.selectField({
        label: "Section"|t('critter'),
        id: 'regenerateSectionHandle',
        name: 'sectionHandle',
        options: craft.app.entries.allSections|filter(section => section.type != 'single')|map(section => {
            value: section.handle,
            label: section.name
        }),
        required: true
    }) }}

    <input type="submit" class="btn submit" value="{{ "Regenerate section CSS"|t('critter') }}">
</form>

<hr>

<h2>Generate fallback CSS</h2>

{% set allSites = craft.app.sites.allSites %}
{% set sitesWithFallback = craft.critter.fallbackService.getSitesWithFallbackEntries() %}
{% set sitesWithoutFallback = craft.critter.fallbackService.getSitesWithoutFallbackEntries() %}

{% if sitesWithFallback|length > 0 %}
    <p>Generate critical CSS from the configured fallback entries and save as fallback CSS. This CSS will be used when no critical CSS is cached for a request.</p>

    <p><em>To change fallback entries, go to Configuration.</em></p>

    {% if sitesWithoutFallback|length > 0 %}
        <div class="warning">
            <p>Some sites do not have fallback entries configured:</p>
            <ul>
                {% for siteInfo in sitesWithoutFallback %}
                    <li><strong>{{ siteInfo.site.name }}</strong>: {{ siteInfo.error }}</li>
                {% endfor %}
            </ul>
        </div>
    {% endif %}

    <form class="utility" method="post" accept-charset="UTF-8">
        {{ actionInput('critter/utility/generate-fallback-css') }}
        {{ redirectInput('utilities/critter') }}
        {{ csrfInput() }}

        {% if allSites|length > 1 %}

            {{ forms.checkboxSelectField({
                label: "Sites"|t('critter'),
                instructions: "Select which sites to generate fallback CSS for."|t('critter'),
                id: 'siteIds',
                name: 'siteIds',
                options: craft.critter.fallbackService.getSiteOptionsForForms(),
                values: sitesWithFallback|map(s => s.site.id),
                class: 'critter-checkboxes',
            }) }}
        {% else %}
            {% for site in allSites %}
                <input type="hidden" name="siteIds[]" value="{{ site.id }}">
            {% endfor %}
        {% endif %}

        <input type="submit" class="btn submit" value="{{ "Generate fallback CSS"|t('critter') }}">
    </form>

{% else %}
    <p class="notice">No sites have fallback entries configured. Go to Configuration to select entries for fallback CSS generation.</p>
{% endif %}

<hr>

<h2>Clear generated fallback CSS</h2>

<p>Remove generated fallback CSS files. The system will fall back to configured file paths (if any) or manual fallback CSS.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/clear-generated-fallback-css') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    {% if allSites|length > 1 %}
        {{ forms.checkboxSelectField({
            label: "Sites"|t('critter'),
            instructions: "Select which sites to clear generated fallback CSS for. Leave empty to clear all generated files."|t('critter'),
            id: 'clearSiteIds',
            name: 'siteIds',
            options: allSites|map(site => {
                label: site.name,
                value: site.id,
                checked: true
            }),
        }) }}
    {% endif %}

    <input type="submit" class="btn submit" value="{{ "Clear generated fallback CSS"|t('critter') }}">
</form>

<hr>

<h2>Clear stuck CSS records</h2>

<p>Clear CSS generation records that are stuck due to API timeouts or failures.<br>This allows failed jobs to be retried from scratch.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/clear-stuck') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    <input type="submit" class="btn submit" value="{{ "Clear stuck records"|t('critter') }}">
</form>

<hr>

<h2>Clear Cache</h2>

<p>Clear all critical CSS data from the cache.</p>

<form class="utility" method="post" accept-charset="UTF-8">
    {{ actionInput('critter/utility/clear-cache') }}
    {{ redirectInput('utilities/critter') }}
    {{ csrfInput() }}

    <input type="submit" class="btn submit" value="{{ "Clear cache"|t('critter') }}">
</form>
